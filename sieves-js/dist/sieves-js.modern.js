import{Controller as e}from"@hotwired/stimulus";var t=0;function n(e){return"__private_"+t+++"_"+e}function r(e,t){if(!Object.prototype.hasOwnProperty.call(e,t))throw new TypeError("attempted to use private field on non-instance");return e}var a=/*#__PURE__*/n("getValueInput"),s=/*#__PURE__*/n("refreshForm");class o extends e{constructor(...e){super(...e),Object.defineProperty(this,s,{value:l}),Object.defineProperty(this,a,{value:i})}updateColumn({params:e}){this.submitBtnTarget.innerHTML="loader",r(this,a)[a](e.index).disabled=!0,r(this,s)[s]()}updateOperator({target:e,params:t}){const n=!["empty","not_empty"].includes(e.value),s=r(this,a)[a](t.index);n?(s.style.removeProperty("display"),s.disabled=!1):(s.disabled=!0,s.style.display="none")}updateConjonction({target:{options:e,selectedIndex:t}}){const n=e[t].text;this.conjonctionTargets.forEach(e=>{e.innerText=n})}}function i(e){return this.element.querySelector(`[data-value-input-index="${e}"]`)}function l(){const e=new URL(window.origin+this.filtersPathValue),t=new FormData(this.element);for(const[n,r]of t.entries())e.searchParams.append(n,r);for(const e of this.element.elements)e.disabled=!0;fetch(e).then(e=>e.text()).then(e=>Turbo.renderStreamMessage(e))}o.values={filtersPath:String},o.targets=["submitBtn","conjonction"];var u=/*#__PURE__*/n("SORT_INPUT_ID"),c=/*#__PURE__*/n("filterableFormElement");class d extends e{constructor(...e){super(...e),Object.defineProperty(this,c,{get:m,set:void 0}),Object.defineProperty(this,u,{writable:!0,value:"filterable_sort"})}sortColumn(){const e=r(this,c)[c].querySelector(`#${r(this,u)[u]}`);let t="asc";e&&e.dataset.columnName===this.columnNameValue&&(t="asc"===e.value?"desc":"asc"),null==e||e.remove(),r(this,c)[c].insertAdjacentHTML("afterbegin",`\n    <input type="hidden"\n           value="${t}"\n           data-column-name="${this.columnNameValue}"\n           autocomplete="off"\n           name="filterable[sort][${this.columnNameValue}]"\n           id="${r(this,u)[u]}">\n    `),r(this,c)[c].submit()}}function m(){return document.getElementById(this.formIdValue)}d.values={formId:String,columnName:String};var h={"filterable--form":o,"filterable--sort":d};const p=e=>{Object.values(h).forEach(t=>{e.register(t.name,t)})};export{p as controllersRegistration};
//# sourceMappingURL=sieves-js.modern.js.map
